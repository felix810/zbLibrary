<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zb.fincore.library.dao.BookRecordDAO" >
  <resultMap id="BaseResultMap" type="com.zb.fincore.library.entity.BookRecordEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_bar_code" property="bookBarCode" jdbcType="VARCHAR" />
    <result column="borrow_user_id" property="borrowUserId" jdbcType="VARCHAR" />
    <result column="borrow_time" property="borrowTime" jdbcType="TIMESTAMP" />
    <result column="return_time" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_by" property="modifyBy" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_bar_code, borrow_user_id, borrow_time, return_time, status, create_by, create_time, 
    modify_by, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zb.fincore.library.entity.BookRecordEntity" >
    insert into book_record (id, book_bar_code, borrow_user_id, 
      borrow_time, return_time, status, 
      create_by, create_time, modify_by, 
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{bookBarCode,jdbcType=VARCHAR}, #{borrowUserId,jdbcType=VARCHAR}, 
      #{borrowTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyBy,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zb.fincore.library.entity.BookRecordEntity" >
    insert into book_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookBarCode != null" >
        book_bar_code,
      </if>
      <if test="borrowUserId != null" >
        borrow_user_id,
      </if>
      <if test="borrowTime != null" >
        borrow_time,
      </if>
      <if test="returnTime != null" >
        return_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyBy != null" >
        modify_by,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookBarCode != null" >
        #{bookBarCode,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null" >
        #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zb.fincore.library.entity.BookRecordEntity" >
    update book_record
    <set >
      <if test="bookBarCode != null" >
        book_bar_code = #{bookBarCode,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null" >
        borrow_user_id = #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null" >
        borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null" >
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zb.fincore.library.entity.BookRecordEntity" >
    update book_record
    set book_bar_code = #{bookBarCode,jdbcType=VARCHAR},
      borrow_user_id = #{borrowUserId,jdbcType=VARCHAR},
      borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_by = #{modifyBy,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>